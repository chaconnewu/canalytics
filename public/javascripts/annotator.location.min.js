/*
** Annotator 1.2.5-dev-b83d51d
** https://github.com/okfn/annotator/
**
** Copyright 2012 Aron Carroll, Rufus Pollock, and Nick Stenning.
** Dual licensed under the MIT and GPLv3 licenses.
** https://github.com/okfn/annotator/blob/master/LICENSE
**
** Built at: 2013-02-08 16:38:15Z
*/(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},t={}.hasOwnProperty,n=function(e,n){function i(){this.constructor=e}for(var r in n)t.call(n,r)&&(e[r]=n[r]);return i.prototype=n.prototype,e.prototype=new i,e.__super__=n.prototype,e};Annotator.Plugin.Location=function(t){function r(){return this.setAnnotationLocation=e(this.setAnnotationLocation,this),this.updateField=e(this.updateField,this),r.__super__.constructor.apply(this,arguments)}return n(r,t),r.prototype.options={parseLocation:function(e){var t;return e=$.trim(e),e&&(t=e),t},stringifyLocation:function(e){return e}},r.prototype.field=null,r.prototype.input=null,r.prototype.pluginInit=function(){if(!Annotator.supported())return;return this.field=this.annotator.editor.addField({label:Annotator._t("Location"),load:this.updateField,submit:this.setAnnotationLocation}),this.annotator.viewer.addField({load:this.updateViewer}),this.annotator.subscribe("annotationEditorShown",this.loadLocation),this.annotator.subscribe("annotationEditorSubmit",this.updateLocation),this.input=$(this.field).find(":input")},r.prototype.parseLocation=function(e){return this.options.parseLocation(e)},r.prototype.stringifyLocation=function(e){return this.options.stringifyLocation(e)},r.prototype.loadLocation=function(e,t){return t.oldlocation=t.location},r.prototype.updateLocation=function(e,t){var n,r,i,s,o;if(t.location&&t.location!==t.oldlocation){geocoder.geocode({address:t.location},function(e,n){var r,i,s,o,u,a,f,l,c,h,p,d;if(n===google.maps.GeocoderStatus.OK){p=t.highlights;for(f=0,c=p.length;f<c;f++)r=p[f],$(r).attr("name",t.location);map.setCenter(e[0].geometry.location),o=new google.maps.Marker({map:window.map,position:e[0].geometry.location,title:t.location}),i=new google.maps.InfoWindow({content:'<a href="#'+t.location+'">'+t.location+"</a>"}),google.maps.event.addListener(o,"click",function(){return i.open(map,o)}),window.markers.push(o),a=window.markers,window.markers=window.markers.filter(function(e){return e.title!==t.oldlocation}),u=a.filter(function(e){return e.title===t.oldlocation}),d=[];for(l=0,h=u.length;l<h;l++)s=u[l],d.push(s.setMap(null));return d}return alert(n)});if(t.eid)return scheduler.getEvent(t.eid).location=t.location,scheduler.updateEvent(t.eid)}else if(!t.location&&t.oldlocaction){i=window.markers,window.markers=window.markers.filter(function(e){return e.title!==t.oldlocation}),r=i.filter(function(e){return e.title===t.oldlocation});for(s=0,o=r.length;s<o;s++)n=r[s],n.setMap(null);if(t.eid)return scheduler.getEvent(t.eid).location="",scheduler.updateEvent(t.eid)}},r.prototype.updateField=function(e,t){var n;return n="",t.location&&(n=this.stringifyLocation(t.location)),this.input.val(n)},r.prototype.setAnnotationLocation=function(e,t){return t.location=this.parseLocation(this.input.val())},r.prototype.updateViewer=function(e,t){return e=$(e),t.location&&t.location!==""?e.addClass("annotator-location").html('<span class="annotator-location"><a href="#", onclick="javascript:getMarker(\''+t.location+"')\">"+Annotator.$.escape(t.location)+"</a></span>"):e.remove()},r}(Annotator.Plugin)}).call(this);